#
# Makefile for SimpleMail
#

# If Kickstart isn't defined, we don't run on AmigaOS
ifndef Kickstart

CROSS_COMPILE = ppc-amigaos-
RM     = rm -Rf
MKDIR  = mkdir -p
DATE   = -DSIMPLEMAIL_DATE=\"`date +%d.%m.%Y`\"

else

RM = delete all
MKDIR = makedir
DATE =
endif

# Uncomment the next line if you are cross compiling

CC     = $(CROSS_COMPILE)gcc
CXX    = $(CROSS_COMPILE)c++
AS     = $(CROSS_COMPILE)as
LD     = $(CROSS_COMPILE)ld
RANLIB = $(CROSS_COMPILE)ranlib
STRIP  = $(CROSS_COMPILE)strip

ifdef USE_OPENSSL
OBJSDIRSUFFIX = openssl
SSL_FLAGS = -DUSE_OPENSSL
SSL_INC = -I build-dependencies/interim-openssl/openssl/repo/include/
SSL_LINK = -L build-dependencies/interim-openssl/openssl/repo/
SSL_LIB = -lssl -lcrypto
else
OBJSDIRSUFFIX = amissl
SSL_FLAGS = -DUSE_AMISSL3
SSL_INC = -I "$(AMISSL_INCLUDE)"
SSL_LINK =
SSL_LIB =
endif

# The commit identifier that is compiled into SimpleMail
COMMITID := '"$(shell (git rev-list HEAD -n 1 | cut -c1-12) || echo unknown commit)"'

# Change these as required
OPTIMIZE = -O3
DEBUG = -g #-ggdb # -g -DDEBUG
INC = \
	-I "$(SDK_INCLUDE)"\
	-I "$(MUI_INCLUDE)"\
	$(SSL_INC)\
	-I "$(NET_INCLUDE)"\
	-I "$(EXPAT_INCLUDE)"\
	-I "$(OPENURL_INCLUDE)"\
	-I.\
	-I./indep-include\
	-I./amiga-mui

CFLAGS = \
	$(DATE)\
	-DHAVE_OPENURL\
	$(SSL_FLAGS)\
	-DSM_COMMITID=$(COMMITID)\
	-D__AMIGAOS4__\
	-D__USE_OLD_TIMEVAL__\
	-DNDEBUG\
	-D__USE_NETINET_IN_H\
	-DROADSHOW_SDK\
	-D__USE_INLINE__\
	-Wall\
	-mcrt=clib2\
	-fno-strict-aliasing\
	-Wno-deprecated-declarations\
	$(OPTIMIZE)\
	$(DEBUG)\
	$(INC)

# Flags passed to gcc during linking
LINK = \
	-nostartfiles\
	-L "$(EXPAT_LIB)"\
	$(SSL_LINK)\
	-mcrt=clib2\
	-Wl,--gc-sections

# Name of the "thing" to build
TARGET = SimpleMail

# Additional linker libraries
LIBS = -ldebug -lexpat $(SSL_LIB)

# Version of the binary to build
VERSION = 0

# Source code files used in this project

ASRCS= amiga-mui/hookentry.S amiga-mui/muidispatcherentry.S

ARCHSRCS=\
	accountpopclass.c \
	addressbookwnd.c \
	addressentrylistclass.c \
	addressgrouplistclass.c \
	addressmatchlistclass.c \
	addressstringclass.c \
	amigasupport.c \
	appicon.c \
	archdebug.c \
	arexx.c \
	attachmentlistclass.c \
	audioselectgroupclass.c \
	composeeditorclass.c \
	composewnd.c \
	configwnd.c \
	configwnd_stuff.c \
	datatypescache.c \
	datatypesclass.c \
	errorwnd.c \
	filterlistclass.c \
	filterruleclass.c \
	filterwnd.c \
	foldertreelistclass.c \
	folderwnd.c \
	gettext.c \
	gui_main.c \
	iconclass.c \
	mailinfoclass.c \
	mailtreelistclass-new.c \
	mailtreelistclass.c \
	mainwnd.c \
	messageviewclass.c \
	muistuff.c \
	multistringclass.c \
	pgplistclass.c \
	picturebuttonclass.c \
	popupmenuclass.c \
	progmonwnd.c \
	readwnd.c \
	searchwnd.c \
	shutdownwnd.c \
	signaturecycleclass.c \
	smtoolbarclass.c \
	startup-os4.c \
	startupwnd.c \
	statuswnd.c \
	subthreads.c \
	support.c \
	sysprint.c \
	tcpip.c \
	transwndclass.c \
	utf8stringclass.c \
	vsnprintf.c

include common-sources.mk

SRCS = $(NONARCHSRCS) $(addprefix amiga-mui/,$(ARCHSRCS))

# -------------------------------------------------------------

OBJSDIR=$(CROSS_COMPILE)objs-$(OBJSDIRSUFFIX)
TESTOBJSDIR=$(CROSS_COMPILE)test-objs-$(OBJSDIRSUFFIX)

OBJS = $(SRCS:%.c=$(OBJSDIR)/%.o)
AOBJS = $(ASRCS:%.S=$(OBJSDIR)/%.o)

TESTOBJS = $(SRCS:%.c=$(TESTOBJSDIR)/%.o)
TESTAOBJS = $(ASRCS:%.S=$(TESTOBJSDIR)/%.o)

all: envs dirs $(TARGET)

ifndef Kickstart
include build-dependencies.mk
BUILD-DEPENDENCIES = .build-dependencies-done
endif

.PHONY: envs
envs: $(BUILD-DEPENDENCIES)
ifndef AMISSL_INCLUDE
	$(error Please create a AMISSL_INCLUDE environment variable)
endif
ifndef NET_INCLUDE
	$(error Please create a NET_INCLUDE environment variable)
endif
ifndef EXPAT_INCLUDE
	$(error Please create a EXPAT_INCLUDE environment variable)
endif
ifndef EXPAT_LIB
	$(error Please create a EXPAT_LIB environment variable)
endif
ifndef SDK_INCLUDE
	$(error Please create a SDK_INCLUDE environment variable)
endif
ifndef MUI_INCLUDE
	$(error Please create a MUI_INCLUDE environment variable)
endif
ifndef OPENURL_INCLUDE
	$(error Please create an OPENURL_INCLUDE environment variable)
endif

.PHONY: dirs
dirs:
	-$(MKDIR) $(OBJSDIR) $(OBJSDIR)/amiga-mui Locale $(TESTOBJSDIR) $(TESTOBJSDIR)/amiga-mui

# Rules for building
$(TARGET): dirs $(OBJS) $(AOBJS)
	$(CC) $(LINK) -o $@.debug $(OBJS) $(AOBJS) $(LIBS) -Wl,--cref,-M,-Map=$@.map
	$(STRIP) --strip-all -o $@ $@.debug

$(OBJSDIR)/%.o: %.S
	$(CC) -Wa,-mregnames $(AFLAGS) -I$(SDK_INCLUDE) -c $< -o $@

$(OBJSDIR)/%.o: %.c
	$(CC) $(CFLAGS) -c $< -o $@

$(TESTOBJSDIR)/%.o: %.S
	$(CC) -Wa,-mregnames $(AFLAGS) -I$(SDK_INCLUDE) -c $< -o $@

$(TESTOBJSDIR)/%.o: %.c
	$(CC) $(CFLAGS) -DCOMPILE_TEST -c $< -o $@

.PHONY: clean
clean:
	$(RM) $(TARGET) $(OBJS) $(OBJSDIR) $(TESTOBJSDIR)

.PHONY: install
install: $(TARGET)
	cp SimpleMail.debug $(DESTDIR)/SimpleMail

.PHONY: revision
revision:
	bumprev $(VERSION) $(TARGET)

.PHONY: tests
tests: dirs imap_unittest

.PHONY: doxygen
doxygen:
	-$(RM) doxygen
	doxygen simplemail.doxyfile

imap_unittest: tests/imap_unittest.c $(TESTOBJS) $(TESTAOBJS)
	$(CC) $(CFLAGS) -c $< -o tests/$@.o
	$(CC) $(LINK) -o $@.debug tests/$@.o $(TESTOBJS) $(TESTAOBJS) $(LIBS) -Wl,--cref,-M,-Map=$@.map
	cp $@.debug $(DESTDIR)/$@

# -------------------------------------------------------------

Locale/%.mo: po/%.po
	msgfmt ./$? -o ./$@

MOS := $(patsubst po/%, Locale/%, $(patsubst %.po, %.mo, $(wildcard po/*.po)))

locale: dirs $(MOS)

# -------------------------------------------------------------

de.pox:
	xgettext --default-domain=simplemail --files-from=po/POTFILES.in --keyword=_ --keyword=N_ --keyword=Q_ --add-comments -o po/simplemail.pot
	msgmerge po/de.po po/simplemail.pot -o po/de.pox --verbose
	$(RM) po/simplemail.pot

# -------------------------------------------------------------

DESTDIR=/tmp/SimpleMail

IMAGES_SRCDIR=amiga-mui/binaries
IMAGES=$(filter-out MorphOS%, $(notdir $(wildcard $(IMAGES_SRCDIR)/*.img)))

REVISION     := $(shell cat SimpleMail_rev.rev)
ARCHIVE_NAME := simplemail-0.$(REVISION)-os4.lha

prepare-os4-release: $(LHA) $(TARGET) locale
	rm -Rf $(DESTDIR)
	mkdir -p \
		$(DESTDIR)/SimpleMail/ARexx \
		$(DESTDIR)/SimpleMail/Charsets \
		$(DESTDIR)/SimpleMail/Libs \
		$(DESTDIR)/SimpleMail/Locale \
		$(DESTDIR)/SimpleMail/Images
	cp $(TARGET) $(DESTDIR)/SimpleMail
	cp doc/amiga/ReadMe $(DESTDIR)/SimpleMail
	cp doc/amiga/SimpleMail.guide $(DESTDIR)/SimpleMail
	cp doc/amiga/history.txt $(DESTDIR)/SimpleMail
	cp amiga-mui/binaries/ReadMe.info $(DESTDIR)/SimpleMail
	cp amiga-mui/binaries/SimpleMail.guide.info $(DESTDIR)/SimpleMail
	cp amiga-mui/binaries/SimpleMail.info $(DESTDIR)/SimpleMail
	cp amiga-mui/binaries/Drawer.info $(DESTDIR)/SimpleMail.info
	cp amiga-mui/binaries/simplehtml-os4.library $(DESTDIR)/SimpleMail/Libs/simplehtml.library
	$(foreach name, $(IMAGES), cp $(IMAGES_SRCDIR)/$(name) $(DESTDIR)/SimpleMail/Images/$(basename $(name)) && ) true
	cp amiga-mui/ARexx/*.smrx $(DESTDIR)/SimpleMail/ARexx
	cp Locale/*.mo $(DESTDIR)/SimpleMail/Locale
	cp Charsets/*.txt $(DESTDIR)/SimpleMail/Charsets
	cp taglines_all.txt $(DESTDIR)/SimpleMail/.taglines
	cd $(DESTDIR) && $(LHA) ao5 $(ARCHIVE_NAME) SimpleMail.info SimpleMail
